#!/usr/bin/env zsh

emulate -L zsh
setopt no_aliases err_exit no_unset extended_glob pipe_fail warn_create_global

local -i x y s a v sx sy vc
local line ax=() ay=() ad=()
read -r line
local -ri width=$#line

for ((y = 1; ; ++y)); do
  for x in {1..$width}; do
    [[ $line[x] != '.' ]] || continue
    [[ $line[x] == '#' ]]
    ax+=$x
    ay+=$y
  done
  read -r line || break
done

(( $#ax > 200 ))

for s in {1..$#ax}; do
  local vx=() vy=()
  for a in {1..$#ax}; do
    (( a != s )) || continue
    x=$((ax[a] - ax[s]))
    y=$((ay[a] - ay[s]))
    for ((v = 1; v <= $#vx; ++v)); do
      (( x * vy[v] != y * vx[v] || x * vx[v] < 0 || y * vy[v] < 0 )) || break
    done
    (( v > $#vx )) || continue
    vx+=$x
    vy+=$y
  done
  (( $#vx > vc )) || continue
  vc=$#vx
  sx=ax[s]
  sy=ay[s]
done

(( vc > 0 ))

for a in {1..$#ax}; do
  (( ax[a] -= sx, 1 ))
  (( ay[a] -= sy, 1 ))
  ad+=$((ax[a] * ax[a] + ay[a] * ay[a]))
done

function rot() {
  local -i x=ax[$1] y=ay[$1] res
  if (( x < 0 )); then
    (( x *= -1, 1 ))
    (( y *= -1, 1 ))
    res+=2
  fi
  if (( y > 0 )); then
    x=y
    res+=1
  fi
  res=$((ad[$2] * (res * ad[$1] + x * x)))
  unsetopt err_exit
  return res
}
functions -M rot 2

function lt() {
  local -i n=$((rot($1, $2)))
  local -i m=$((rot($2, $1)))
  local -i res=$((n < m || (n == m && ad[$1] < ad[$2])))
  unsetopt err_exit
  return res
}
functions -M lt 2

local tmp
local -i i j
for ((i = 1; i <= $#ax; ++i)); do
  for ((j = i + 1; j <= $#ax; ++j)); do
    if (( lt(j, i) )); then
      tmp=$ax[i]; ax[i]=$ax[j]; ax[j]=$tmp
      tmp=$ay[i]; ay[i]=$ay[j]; ay[j]=$tmp
      tmp=$ad[i]; ad[i]=$ad[j]; ad[j]=$tmp
    fi
  done
done

(( ax[1] == 0 && ay[1] == 0 && ad[1] == 0 ))
shift 1 ax ay ad

local -i killed
while true; do
  local ax2=() ay2=() ad2=()
  local -i d=0
  for i in {1..$#ax}; do
    if (( d && rot(i, d) == rot(d, i) )); then
      ax2+=$ax[i]
      ay2+=$ay[i]
      ad2+=$ad[i]
    elif (( ++killed == 200 )); then
      echo -E - $((100 * (ax[i] + sx - 1) + (ay[i] + sy - 1)))
      exit
    else
      d=i
    fi
  done
  ax=($ax2)
  ay=($ay2)
  ad=($ad2)
done
