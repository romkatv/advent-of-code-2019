#!/usr/bin/env zsh

emulate -L zsh
setopt no_aliases err_return no_unset extended_glob pipe_fail warn_create_global

zmodload zsh/mathfunc

local -A grid=('0:0' '')
local wire_label segment
local -a wire_path
local -i res=-1

for wire_label in first second; do
  IFS=, read -rA wire_path
  local -i x=0 y=0

  for segment in $wire_path; do
    case $segment in
      L*) local -i dx=-1 dy=0;;
      R*) local -i dx=1  dy=0;;
      U*) local -i dx=0  dy=1;;
      D*) local -i dx=0  dy=-1;;
       *) return 1;
    esac
    repeat ${segment:1}; do
      (( x += dx, 1 ))
      (( y += dy, 1 ))
      if [[ $wire_label == first ]]; then
        grid[$x:$y]=''
      elif [[ -v grid[$x:$y] ]]; then
        local -i dist=$((abs(x) + abs(y)))
        (( res >= 0 && res < dist )) || res=$dist
      fi
    done
  done
done

(( res >= 0 ))
echo -E - $res
