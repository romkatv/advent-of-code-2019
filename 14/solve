#!/usr/bin/env zsh

emulate -L zsh
setopt no_aliases err_return no_unset extended_glob pipe_fail warn_create_global

zmodload zsh/system

local program
read -r program

function amp() (
  { echo -E - $1; exec cat } | { ./icc $program; exit }
)

function loop() {
  local fin fout fdin fdout buf
  {
    fin="$(mktemp -u ${TMPDIR:-/tmp}/aoc-2019.XXXXXXXXXX)"
    fout="$(mktemp -u ${TMPDIR:-/tmp}/aoc-2019.XXXXXXXXXX)"
    mkfifo $fin $fout
    eval $1 <$fin >$fout &
    {
      exec {fdin}>$fin {fdout}<$fout
      while true; do
        local -i ret=0
        sysread -i $fdout buf || ret=$?
        (( ret != 5 )) || break
        (( ret == 0 ))
        echo -nE - $buf >&1 >&$fdin
      done
    } always {
      if (( $? )); then
        kill $!
        wait $!
      fi
    }
    wait $!
  } always {
    rm -f "$fin" "$fout"
    [[ -z $fdin  ]] || exec {fdin}>&-
    [[ -z $fdout ]] || exec {fdout}>&-
  }
}

local -i a b c d e res
local range=({5..9}) match=() out

for a in $range; do
  for b in ${range:#($a)}; do
    for c in ${range:#($a|$b)}; do
      for d in ${range:#($a|$b|$c)}; do
        for e in ${range:#($a|$b|$c|$d)}; do
          out="$(loop "amp $a$'\n'0 | amp $b | amp $c | amp $d | amp $e")"
          [[ $out == (#b)(*$'\n'|)(<1->) ]]
          (( res > match[2] )) || res=$match[2]
        done
      done
    done
  done
done

(( res > 0 ))
echo -E - $res
