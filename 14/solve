#!/usr/bin/env zsh

emulate -L zsh
setopt no_aliases err_return no_unset extended_glob pipe_fail warn_create_global

local program
read -r program

function amp() (
  { echo -E - $1; exec cat } | { ./icc $program; exit }
)

function loop() {
  local fin fout fdin fdout line res
  {
    fin="$(mktemp -u ${TMPDIR:-/tmp}/aoc-2019.XXXXXXXXXX)"
    fout="$(mktemp -u ${TMPDIR:-/tmp}/aoc-2019.XXXXXXXXXX)"
    mkfifo $fin $fout
    eval $1 <$fin >$fout &
    {
      exec {fdin}>$fin {fdout}<$fout
      while read -ru $fdout line; do
        echo -E - $line >&$fdin
        res=$line
      done
    } always {
      if (( $? )); then
        kill $!
        wait $!
      fi
    }
    wait $!
    echo -E - $res
  } always {
    rm -f "$fin" "$fout"
    [[ -z $fdin  ]] || exec {fdin}>&-
    [[ -z $fdout ]] || exec {fdout}>&-
  }
}

local -i res
local out x

for x in {56789..98765}; do
  [[ $x == [5-9]# && ${#${(us::)x}} == 5 ]] || continue
  out=$(loop "amp $x[1]$'\n'0 | amp $x[2] | amp $x[3] | amp $x[4] | amp $x[5]")
  [[ $out == <1-> ]]
  (( res > out )) || res=out
done

(( res > 0 ))
echo -E - $res
